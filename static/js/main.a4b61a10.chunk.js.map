{"version":3,"sources":["component/Search.jsx","component/Result.jsx","App.jsx","index.js"],"names":["Search","props","id","type","name","placeholder","onChange","changeCity","value","city","Result","useState","result","setResult","units","setUnits","showResult","setShowResult","showNotFound","setShowNotFound","location","a","fetch","response","ok","message","status","Error","json","responseJson","main","weather","console","log","useEffect","timer","setTimeout","fetchWeather","clearTimeout","src","alt","onClick","Math","round","temp","celcius","getFahrenheit","description","className","class","App","setCity","event","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAGe,SAASA,EAAOC,GAC7B,OACE,sBAAKC,GAAG,SAAR,UACE,6CACA,qBAAKA,GAAG,aAAR,SACE,uBAAOC,KAAK,OAAOC,KAAK,gBAAgBF,GAAG,gBAAgBG,YAAY,WAAWC,SAAUL,EAAMM,WAAYC,MAAOP,EAAMQ,Y,wCCLpH,SAASC,EAAOT,GAAQ,IAAD,EACRU,mBAAS,IADD,mBAC7BC,EAD6B,KACrBC,EADqB,OAEVF,mBAAS,UAFC,mBAE7BG,EAF6B,KAEtBC,EAFsB,OAGAJ,oBAAS,GAHT,mBAG7BK,EAH6B,KAGjBC,EAHiB,OAIIN,oBAAS,GAJb,mBAI7BO,EAJ6B,KAIfC,EAJe,iDAmBpC,WAA4BC,GAA5B,mBAAAC,EAAA,6DACEF,GAAgB,GACD,mCAFjB,kBAI2BG,MAAM,qDAAD,OAC2BF,EAD3B,kBAFf,mCAEe,kBAJhC,WAIUG,EAJV,QAOkBC,GAPlB,uBAQMP,GAAc,GACdE,GAAgB,GACVM,EAVZ,gCAU+CF,EAASG,QAC5C,IAAIC,MAAMF,GAXtB,yBAa+BF,EAASK,OAbxC,QAaUC,EAbV,OAeIhB,EAAU,yBACRT,KAAMyB,EAAazB,MAChByB,EAAaC,MAFT,IAGPC,QAAQ,eAAMF,EAAaE,YAG7Bd,GAAc,GArBlB,kDAuBIe,QAAQC,IAAID,QAAQC,IAAI,KAAMR,UAvBlC,2DAnBoC,sBA0DpC,OAZAS,qBAAU,WACRF,QAAQC,IAAIhC,EAAMQ,MAClB,IAAM0B,EAAQC,YAAW,YAhDS,oCAiDhCC,CAAapC,EAAMQ,QAClB,KACH,OAAO,kBAAM6B,aAAaH,MACzB,CAAClC,EAAMQ,OAEVyB,qBAAU,WACRF,QAAQC,IAAIrB,KACX,CAACA,IAGF,qBAAKV,GAAG,SAAR,SACGc,EACC,sBAAKd,GAAG,UAAR,UACE,mBAAGA,GAAG,OAAN,SAAcU,EAAOR,OACrB,sBAAKF,GAAG,UAAR,UACE,qBACEqC,IAAI,+CACJC,IAAI,YAEN,oBAAGtC,GAAG,OAAOuC,QAzDvB,WAEI1B,EADW,UAATD,EACO,WAEA,WAqDH,UACY,UAATA,EAAoB4B,KAAKC,MAAM/B,EAAOgC,MA/DnD,WACE,IAAMC,EAAUjC,EAAOgC,KACvB,OAAOF,KAAKC,MAAiB,EAAVE,EAAe,EAAI,IA6DmBC,GACrC,UAAThC,EAAoB,QAAO,cAGhC,mBAAGZ,GAAG,OAAN,SAAcU,EAAOmB,QAAQ,GAAGgB,iBAEhC7B,EACF,qBAAKhB,GAAG,WAAR,uEAIA,qBAAK8C,UAAU,UAAf,SACE,qBAAKC,MAAM,eC/EN,SAASC,IAAO,IAAD,EACJvC,mBAAS,WADL,mBACrBF,EADqB,KACf0C,EADe,KAM5B,OACE,sBAAKjD,GAAG,MAAR,UACE,cAAC,EAAD,CAAQO,KAAMA,EAAMF,WALxB,SAAoB6C,GAClBD,EAAQC,EAAMC,OAAO7C,UAKnB,cAAC,EAAD,CAAQC,KAAMA,OCVpB6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a4b61a10.chunk.js","sourcesContent":["import React from 'react';\nimport '../style/Search.scss';\n\nexport default function Search(props) {\n  return (\n    <div id=\"search\">\n      <h1>WEATHER APP</h1>\n      <div id=\"search-box\">\n        <input type=\"text\" name=\"locationInput\" id=\"locationInput\" placeholder='Location' onChange={props.changeCity} value={props.city}/>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport '../style/Result.scss';\n\nexport default function Result(props) {\n  const [result, setResult] = useState({});\n  const [units, setUnits] = useState('metric');\n  const [showResult, setShowResult] = useState(false);\n  const [showNotFound, setShowNotFound] = useState(false);\n\n  function getFahrenheit() {\n    const celcius = result.temp;\n    return Math.round((celcius * 9) / 5 + 32);\n  }\n\n  function changeUnits() {\n    if (units == 'metric') {\n      setUnits('imperial');\n    } else {\n      setUnits('metric');\n    }\n  }\n\n  async function fetchWeather(location) {\n    setShowNotFound(false);\n    const apiKey = '2e26dda3d1cad9a9762aaef146d6df48';\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`,\n      );\n      if (!response.ok) {\n        setShowResult(false);\n        setShowNotFound(true);\n        const message = `An error has occured: ${response.status}`;\n        throw new Error(message);\n      }\n      const responseJson = await response.json();\n\n      setResult({\n        name: responseJson.name,\n        ...responseJson.main,\n        weather: { ...responseJson.weather },\n      });\n\n      setShowResult(true);\n    } catch (error) {\n      console.log(console.log(error.message));\n    }\n  }\n\n  useEffect(() => {\n    console.log(props.city);\n    const timer = setTimeout(() => {\n      fetchWeather(props.city);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [props.city]);\n\n  useEffect(() => {\n    console.log(result);\n  }, [result]);\n\n  return (\n    <div id=\"result\">\n      {showResult ? (\n        <div id=\"wrapper\">\n          <p id=\"name\">{result.name}</p>\n          <div id=\"weather\">\n            <img\n              src=\"https://openweathermap.org/img/wn/10n@2x.png\"\n              alt=\"weather\"\n            />\n            <p id=\"temp\" onClick={changeUnits}>\n              {units == 'metric' ? Math.round(result.temp) : getFahrenheit()}\n              {units == 'metric' ? '°C' : '°F'}\n            </p>\n          </div>\n          <p id=\"desc\">{result.weather[0].description}</p>\n        </div>\n      ) : showNotFound ? (\n        <div id=\"notFound\">\n          Error Occured. Can't find the keyword or network problem.\n        </div>\n      ) : (\n        <div className=\"wrapper\">\n          <div class=\"loader\"></div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Search from './component/Search';\nimport Result from './component/Result';\n\nexport default function App() {\n  const [city, setCity] = useState('Jakarta');\n\n  function changeCity(event) {\n    setCity(event.target.value);\n  }\n  return (\n    <div id=\"app\">\n      <Search city={city} changeCity={changeCity} />\n      <Result city={city} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}