[{"/home/ananda/Projects/the_odin_project/weather-app/src/index.js":"1","/home/ananda/Projects/the_odin_project/weather-app/src/component/Search.jsx":"2","/home/ananda/Projects/the_odin_project/weather-app/src/App.jsx":"3","/home/ananda/Projects/the_odin_project/weather-app/src/component/Result.jsx":"4"},{"size":197,"mtime":1606198366465,"results":"5","hashOfConfig":"6"},{"size":357,"mtime":1606211054711,"results":"7","hashOfConfig":"6"},{"size":423,"mtime":1606372692064,"results":"8","hashOfConfig":"6"},{"size":2431,"mtime":1606373223650,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1bf070j",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"/home/ananda/Projects/the_odin_project/weather-app/src/index.js",[],["20","21"],"/home/ananda/Projects/the_odin_project/weather-app/src/component/Search.jsx",[],"/home/ananda/Projects/the_odin_project/weather-app/src/App.jsx",[],"/home/ananda/Projects/the_odin_project/weather-app/src/component/Result.jsx",["22","23","24"],"import React, { useEffect, useState } from 'react';\nimport '../style/Result.scss';\n\nexport default function Result(props) {\n  const [result, setResult] = useState({});\n  const [units, setUnits] = useState('metric');\n  const [showResult, setShowResult] = useState(false);\n  const [showNotFound, setShowNotFound] = useState(false);\n\n  function getFahrenheit() {\n    const celcius = result.temp;\n    return Math.round((celcius * 9) / 5 + 32);\n  }\n\n  function changeUnits() {\n    if (units == 'metric') {\n      setUnits('imperial');\n    } else {\n      setUnits('metric');\n    }\n  }\n\n  async function fetchWeather(location) {\n    setShowNotFound(false);\n    const apiKey = '2e26dda3d1cad9a9762aaef146d6df48';\n    try {\n      const response = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=${apiKey}&units=metric`,\n      );\n      if (!response.ok) {\n        setShowResult(false);\n        setShowNotFound(true);\n        const message = `An error has occured: ${response.status}`;\n        throw new Error(message);\n      }\n      const responseJson = await response.json();\n\n      setResult({\n        name: responseJson.name,\n        ...responseJson.main,\n        weather: { ...responseJson.weather },\n      });\n\n      setShowResult(true);\n    } catch (error) {\n      console.log(console.log(error.message));\n    }\n  }\n\n  useEffect(() => {\n    console.log(props.city);\n    const timer = setTimeout(() => {\n      fetchWeather(props.city);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, [props.city]);\n\n  useEffect(() => {\n    console.log(result);\n  }, [result]);\n\n  return (\n    <div id=\"result\">\n      {showResult ? (\n        <div id=\"wrapper\">\n          <p id=\"name\">{result.name}</p>\n          <div id=\"weather\">\n            <img\n              src=\"https://openweathermap.org/img/wn/10n@2x.png\"\n              alt=\"weather\"\n            />\n            <p id=\"temp\" onClick={changeUnits}>\n              {units == 'metric' ? Math.round(result.temp) : getFahrenheit()}\n              {units == 'metric' ? '°C' : '°F'}\n            </p>\n          </div>\n          <p id=\"desc\">{result.weather[0].description}</p>\n        </div>\n      ) : showNotFound ? (\n        <div id=\"notFound\">\n          Error Occured. Can't find the keyword or network problem.\n        </div>\n      ) : (\n        <div className=\"wrapper\">\n          <div class=\"loader\"></div>\n        </div>\n      )}\n    </div>\n  );\n}\n",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":16,"column":15,"nodeType":"31","messageId":"32","endLine":16,"endColumn":17},{"ruleId":"29","severity":1,"message":"30","line":73,"column":22,"nodeType":"31","messageId":"32","endLine":73,"endColumn":24},{"ruleId":"29","severity":1,"message":"30","line":74,"column":22,"nodeType":"31","messageId":"32","endLine":74,"endColumn":24},"no-native-reassign",["33"],"no-negated-in-lhs",["34"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]